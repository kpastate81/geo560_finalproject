potential_temp(12,1008)
potential_temp(12,1008)
potential_temp(12,1008)
potential_temp(12,1008)
potential_temp(12,1008)
potential_temp()
source('potential_temp')
load("~/Documents/GitHub/geo560_finalproject/potential_temp.R")
potential_temp(13,1008)
T = 12
P = 1008
potential_temp()
potential_temp(T,P)
mean_two_numers(10,20)
mean_two_numbers(10,20)
help(functions)
potential_temp(T=12,P=1008)
library(potential_temp)
getwd()
class(potential_temp.function)
class(potential_temp.function)
class(potential_temp)
potential_temp()
potential_temp(Temp=12, P=1008)
class(potential_temp.R)
load("~/Documents/GitHub/geo560_finalproject/potential_temp.R")
T_K <- Temp + 273.15 #K
T_K <- Temp + 273.15 #K
Temp = 12
P = 1008
theta <- T_K*((P0/Pres)^(R/cp))
return(theta)
theta <- T_K*((P0/P)^(R/cp))
T_K = Temp+273.15 #K
theta <- T_K*((P0/P)^(R/cp))
cp = 1005.7 #Jkg-1K-1
T_K = Temp+273.15 #K
theta <- T_K*((P0/P)^(R/cp))
return(theta)
potential_temp <- function(Temp,
P) {
#This function returns the temperature a parcel of dry air would
#have if brought adiabatically to a standard pressure level of 1000 mb.
P0 = 1000 #hPa
R = 287.04 #Jkg-1K-1
cp = 1005.7 #Jkg-1K-1
T_K = Temp+273.15 #K
theta <- T_K*((P0/P)^(R/cp))
return(theta)
}
potential_temp(13,1008)
saturation_vapor_pressure <- function(Temp) {
#This function returns the saturation vapor pressure, es.
e0 = 611 #Pa
T0 = 273.15 #K
cp = 1005.7 #Jkg-1K-1
Rv = 462 #J kg^-1 K^-1;
L = 2.5E6 #J kg^-1;
T_K = Temp+273.15 #K
es <- e0 * exp((L/Rv)*((1/T0)-(1/T_K)))
return(es)
}
water_vapor_RH <- function(Temp,
RH) {
#This function returns the water vapor pressure (e) using RH.
es = saturation_vapor_pressure(Temp)
e <- (RH/100)*es;
return(e)
}
saturation_vapor_pressure(12)
water_vapor_RH(12,85)
r <- 0.622*(e/(P-e))
water_vapor_RH(12,68)
return(r)
mixing_ratio <- function(Temp,
RH,
P) {
#This function returns the returns the mixing ratio using
#water vapor pressure e.
e = (water_vapor_RH(Temp,RH))/100
r <- 0.622*(e/(P-e))
return(r)
}
mixing_ratio(12,85,1008)
LCL_temp_RH <- function(Temp,
RH) {
#This function returns the the lifting condensation level temperature using RH
T_K = Temp+273.15 #K
T_L <- (1/((1/(T_k-55))-(log(RH/100)/2840)))+55
return(T_L)
}
equiv_potential_temp <- function(Temp,
P,
RH) {
#This function returns the equivalent potential temperature based on
#Bolton (1980)
r = mixing_ratio(Temp,RH,P)*1000
theta = potential_temp(Temp,P)
T_L = LCL_temp_RH(T,RH)
theta_e <- theta*exp(((3.376/T_L)-0.00254)* r*(1+0.81*10^-3*r));
return(theta_e)
}
equiv_potential_temp(13,1008,86)
T_L <- (1/((1/(T_K-55))-(log(RH/100)/2840)))+55
LCL_temp_RH <- function(Temp,
RH) {
#This function returns the the lifting condensation level temperature using RH
T_K = Temp+273.15 #K
T_L <- (1/((1/(T_K-55))-(log(RH/100)/2840)))+55
return(T_L)
}
equiv_potential_temp(13,1008,86)
theta_e = equiv_potential_temp(Temp,P,RH)
theta_e = equiv_potential_temp(Temp,P,RH)
equiv_potential_temp(Temp,P,RH)
#Variables:
Temp = 12.8 #°C
P = 1008.2 #hPa
RH = 83 #%
equiv_potential_temp(Temp,P,RH)
#Variables:
Temp = 12.8 #°C
P = 1008.2 #hPa
RH = 83 #%
equiv_potential_temp(Temp,P,RH)
potential_temp()
cp = 1005.7 #Jkg-1K-1
T_K = Temp+273.15 #K
theta <- T_K*((P0/P)^(R/cp))
return(theta)
potential_temp <- function(Temp,
P) {
#This function returns the temperature a parcel of dry air would
#have if brought adiabatically to a standard pressure level of 1000 mb.
P0 = 1000 #hPa
R = 287.04 #Jkg-1K-1
cp = 1005.7 #Jkg-1K-1
T_K = Temp+273.15 #K
theta <- T_K*((P0/P)^(R/cp))
return(theta)
}
water_vapor_RH <- function(Temp,
RH) {
#This function returns the water vapor pressure (e) using RH.
es = saturation_vapor_pressure(Temp)
e <- (RH/100)*es;
return(e)
}
mixing_ratio <- function(Temp,
RH,
P) {
#This function returns the returns the mixing ratio using
#water vapor pressure e.
e = (water_vapor_RH(Temp,RH))/100
r <- 0.622*(e/(P-e))
return(r)
}
saturation_vapor_pressure <- function(Temp) {
#This function returns the saturation vapor pressure, es.
e0 = 611 #Pa
T0 = 273.15 #K
cp = 1005.7 #Jkg-1K-1
Rv = 462 #J kg^-1 K^-1;
L = 2.5E6 #J kg^-1;
T_K = Temp+273.15 #K
es <- e0 * exp((L/Rv)*((1/T0)-(1/T_K)))
return(es)
}
LCL_temp_RH <- function(Temp,
RH) {
#This function returns the the lifting condensation level temperature using RH
T_K = Temp+273.15 #K
T_L <- (1/((1/(T_K-55))-(log(RH/100)/2840)))+55
return(T_L)
}
#Variables:
Temp = 12.8 #°C
P = 1008.2 #hPa
RH = 83 #%
equiv_potential_temp(Temp,P,RH)
equiv_potential_temp <- function(Temp,
P,
RH) {
#This function returns the equivalent potential temperature based on
#Bolton (1980)
r = mixing_ratio(Temp,RH,P)*1000
theta = potential_temp(Temp,P)
T_L = LCL_temp_RH(T,RH)
theta_e <- theta*exp(((3.376/T_L)-0.00254)* r*(1+0.81*10^-3*r));
return(theta_e)
}
equiv_potential_temp(Temp,P,RH)
